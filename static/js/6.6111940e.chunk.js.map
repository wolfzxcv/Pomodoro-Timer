{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js","../node_modules/@material-ui/styles/esm/withStyles/withStyles.js","../node_modules/@material-ui/core/esm/styles/withStyles.js","../node_modules/@material-ui/core/esm/utils/reactHelpers.js","../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js","../node_modules/@material-ui/core/esm/utils/debounce.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/InputBase/InputBase.js","../node_modules/@material-ui/core/esm/FormControl/formControlState.js"],"names":["FormControlContext","react_default","a","createContext","FormControl_FormControlContext","getThemeProps_getThemeProps","params","theme","name","props","propName","defaultProps","undefined","esm_withStyles_withStyles","stylesOrCreator","options","arguments","length","Component","defaultTheme","_options$withTheme","withTheme","stylesOptions","objectWithoutProperties_default","classNamePrefix","useStyles","Object","makeStyles","extends_default","displayName","WithStyles","forwardRef","ref","classes","innerRef","other","more","useTheme","createElement","hoist_non_react_statics_cjs_default","styles_withStyles","styles_defaultTheme","setRef","value","current","useForkRef","refA","refB","useMemo","refValue","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","useLayoutEffect","useEffect","styles","visibility","position","overflow","height","esm_TextareaAutosize_TextareaAutosize","onChange","rows","rowsMax","style","isControlled","useRef","inputRef","handleRef","shadowRef","_React$useState","useState","_React$useState2","slicedToArray_default","state","setState","syncHeight","useCallback","input","getComputedStyle","inputShallow","width","placeholder","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","prevState","abs","handleResize","func","timeout","wait","debounced","_len","args","Array","_key","that","this","clearTimeout","setTimeout","apply","clear","debounce","addEventListener","removeEventListener","Fragment","event","aria-hidden","className","readOnly","tabIndex","hasValue","isArray","InputBase_InputBase","ariaDescribedby","autoComplete","autoFocus","classNameProp","defaultValue","disabled","endAdornment","_props$fullWidth","error","fullWidth","id","_props$inputComponent","inputComponent","_props$inputProps","inputProps","inputPropsClassName","inputPropsProp","inputRefProp","_props$multiline","margin","multiline","onBlur","onClick","onEmpty","onFilled","onFocus","onKeyDown","onKeyUp","renderPrefix","_props$select","select","startAdornment","_props$type","type","handleInputRefWarning","instance","handleInputPropsRefProp","handleInputRefProp","handleInputRef","focused","setFocused","muiFormControl","useContext","fcs","_ref","states","reduce","acc","formControlState","checkDirty","obj","SSR","isFilled","InputComponent","clsx_m","root","formControl","marginDense","adornedStart","adornedEnd","currentTarget","target","focus","Provider","aria-invalid","aria-describedby","inputTypeSearch","inputMultiline","inputSelect","inputMarginDense","inputAdornedStart","inputAdornedEnd","concat","stopPropagation","required","__webpack_exports__","light","palette","color","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","fontFamily","typography","text","primary","fontSize","pxToRem","lineHeight","cursor","display","alignItems","&$disabled","&$marginDense","paddingTop","font","background","WebkitTapHighlightColor","minWidth","&::-webkit-input-placeholder","&::-moz-placeholder","&:-ms-input-placeholder","&::-ms-input-placeholder","&:focus","outline","&:invalid","boxShadow","&::-webkit-search-decoration","-webkit-appearance","label[data-shrink=false] + $formControl &","&:focus::-webkit-input-placeholder","&:focus::-moz-placeholder","&:focus:-ms-input-placeholder","&:focus::-ms-input-placeholder","paddingRight","resize","-moz-appearance"],"mappings":"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","file":"static/js/6.6111940e.chunk.js","sourcesContent":["import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","/* eslint-disable no-restricted-syntax */\nfunction getThemeProps(params) {\n  var theme = params.theme,\n      name = params.name,\n      props = params.props;\n\n  if (!theme || !theme.props || !theme.props[name]) {\n    return props;\n  } // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  var defaultProps = theme.props[name];\n  var propName;\n\n  for (propName in defaultProps) {\n    if (props[propName] === undefined) {\n      props[propName] = defaultProps[propName];\n    }\n  }\n\n  return props;\n}\n\nexport default getThemeProps;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nvar withStyles = function withStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (Component) {\n    var defaultTheme = options.defaultTheme,\n        _options$withTheme = options.withTheme,\n        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,\n        name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      // Provide a better DX outside production.\n      var displayName = getDisplayName(Component);\n\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      defaultTheme: defaultTheme,\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var WithStyles = React.forwardRef(function WithStyles(props, ref) {\n      var classesProp = props.classes,\n          innerRef = props.innerRef,\n          other = _objectWithoutProperties(props, [\"classes\", \"innerRef\"]);\n\n      var classes = useStyles(props);\n      var theme;\n      var more = other;\n\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n\n        if (name) {\n          more = getThemeProps({\n            theme: theme,\n            name: name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n\n      return React.createElement(Component, _extends({\n        ref: innerRef || ref,\n        classes: classes\n      }, more));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: PropTypes.object,\n\n      /**\n       * Use that property to pass a ref callback to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), function (props) {\n        if (props.innerRef == null) {\n          return null;\n        }\n\n        return null; // return new Error(\n        //   'Material-UI: the `innerRef` prop is deprecated and will be removed in v5. ' +\n        //     'Refs are now automatically forwarded to the inner component.',\n        // );\n      })\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = \"WithStyles(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithStyles, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n\n    return WithStyles;\n  };\n};\n\nexport default withStyles;","import _extends from \"@babel/runtime/helpers/extends\";\nimport { withStyles as withStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction withStyles(stylesOrCreator, options) {\n  return withStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default withStyles;","import React from 'react';\nexport function isMuiElement(element, muiNames) {\n  return React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}\nexport function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\nexport function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: '0'\n  }\n};\nvar TextareaAutosize = React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"style\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight;\n    singleRowHeight -= padding; // The height of the outer content\n\n    var outerHeight = innerHeight - padding;\n\n    if (rows != null) {\n      outerHeight = Math.max(Number(rows) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax != null) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n    outerHeight += boxSizing === 'border-box' ? padding + border : 0;\n    setState(function (prevState) {\n      // Need a large enough different to update the height.\n      // This prevents infinite rendering loop.\n      if (outerHeight > 0 && Math.abs((prevState.outerHeight || 0) - outerHeight) > 1) {\n        return {\n          innerHeight: innerHeight,\n          outerHeight: outerHeight\n        };\n      }\n\n      return prevState;\n    });\n  }, [setState, rows, rowsMax, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rows || 1,\n    style: _extends({\n      height: state.outerHeight,\n      // Need a large enough different to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: Math.abs(state.outerHeight - state.innerHeight) <= 1 ? 'hidden' : null\n    }, style)\n  }, other)), React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Minimum umber of rows to display.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.any\n} : void 0;\nexport default TextareaAutosize;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // eslint-disable-next-line consistent-this\n\n\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport { useForkRef } from '../utils/reactHelpers';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // Mimics the default input display property used by browsers for an input.\n      fontFamily: theme.typography.fontFamily,\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '1.1875em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      '&$marginDense': {\n        paddingTop: 4 - 1\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      color: 'currentColor',\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1875em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `select={true}. */\n    inputSelect: {\n      paddingRight: 32\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = React.forwardRef(function InputBase(props, ref) {\n  var ariaDescribedby = props['aria-describedby'],\n      autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      endAdornment = props.endAdornment,\n      error = props.error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      id = props.id,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$inputProps = props.inputProps;\n  _props$inputProps = _props$inputProps === void 0 ? {} : _props$inputProps;\n\n  var inputPropsClassName = _props$inputProps.className,\n      inputPropsProp = _objectWithoutProperties(_props$inputProps, [\"className\"]),\n      inputRefProp = props.inputRef,\n      margin = props.margin,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onEmpty = props.onEmpty,\n      onFilled = props.onFilled,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      placeholder = props.placeholder,\n      readOnly = props.readOnly,\n      renderPrefix = props.renderPrefix,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      startAdornment = props.startAdornment,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onEmpty\", \"onFilled\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderPrefix\", \"rows\", \"rowsMax\", \"select\", \"startAdornment\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef();\n  var handleInputRefWarning = React.useCallback(function (instance) {\n    process.env.NODE_ENV !== \"production\" ? warning(!instance || instance instanceof HTMLInputElement || instance.focus, ['Material-UI: you have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` property.', 'Make sure the `inputRef` property is called with a HTMLInputElement.'].join('\\n')) : void 0;\n  }, []);\n  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  var handleInputRef = useForkRef(inputRef, handleInputRefProp);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['disabled', 'error', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(function () {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  var checkDirty = React.useCallback(function (obj) {\n    if (isFilled(obj)) {\n      if (muiFormControl && muiFormControl.onFilled) {\n        muiFormControl.onFilled();\n      }\n\n      if (onFilled) {\n        onFilled();\n      }\n\n      return;\n    }\n\n    if (muiFormControl && muiFormControl.onEmpty) {\n      muiFormControl.onEmpty();\n    }\n\n    if (onEmpty) {\n      onEmpty();\n    }\n  }, [muiFormControl, onEmpty, onFilled]);\n  React.useEffect(function () {\n    if (isControlled) {\n      checkDirty({\n        value: value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n  React.useEffect(function () {\n    if (!isControlled) {\n      checkDirty(inputRef.current);\n    }\n  }, [checkDirty, isControlled]);\n\n  var handleFocus = function handleFocus(event) {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      checkDirty({\n        value: (event.target || inputRef.current).value\n      });\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      onChange.apply(void 0, [event].concat(args));\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var InputComponent = inputComponent;\n\n  var inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type: type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows && !rowsMax) {\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        rows: rows,\n        rowsMax: rowsMax\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type: type\n    }, inputProps);\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classNameProp, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, fcs.margin === 'dense' && classes.marginDense, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd),\n    onClick: handleClick,\n    ref: ref\n  }, other), renderPrefix ? renderPrefix(_extends({}, fcs, {\n    startAdornment: startAdornment\n  })) : null, startAdornment, React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    className: clsx(classes.input, inputPropsClassName, fcs.disabled && classes.disabled, type === 'search' && classes.inputTypeSearch, multiline && classes.inputMultiline, select && classes.inputSelect, fcs.margin === 'dense' && classes.inputMarginDense, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd),\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    name: name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value\n  }, inputProps))), endAdornment);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This property helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEmpty: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFilled: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderPrefix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Should be `true` when the component hosts a select.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);","export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}"],"sourceRoot":""}