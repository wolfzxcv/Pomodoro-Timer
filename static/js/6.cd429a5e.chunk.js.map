{"version":3,"sources":["components/ToDoList/Todos.jsx","components/ToDoList/ToDoList.jsx"],"names":["StyledTodos","styled","Box","_templateObject","props","theme","colors","gray","Todos","_ref","id","title","completed","react_default","a","createElement","width","height","fontSize","display","justifyContent","alignItems","paddingLeft","marginRight","className","paddingRight","StyledTodoList","ToDoList_templateObject","orange","TextColor","_templateObject2","BorderColor","_templateObject3","ArrowDown","_templateObject4","white","ArrowUp","_templateObject5","ToDoList","_useContext","useContext","ContextProvider","input","setInput","isError","todos","addTodo","showActTodos","setShowActTodos","flexDirection","onSubmit","InputBase","fullWidth","placeholder","value","onChange","e","target","onClick","bgcolor","color","marginLeft","length","map","todo","ToDoList_Todos","key"],"mappings":"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","file":"static/js/6.cd429a5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst Todos = ({ id, title, completed }) => {\r\n  return (\r\n    <StyledTodos\r\n      width='45vw'\r\n      height='60px'\r\n      fontSize='24px'\r\n      display='flex'\r\n      justifyContent='space-between'\r\n      alignItems='center'\r\n    >\r\n      <Box paddingLeft='20px'>\r\n        <Box marginRight='20px'>\r\n          <i className='far fa-circle' />\r\n        </Box>\r\n        {title}\r\n      </Box>\r\n      <Box paddingRight='30px' fontSize='28px'>\r\n        <i className='far fa-play-circle' />\r\n      </Box>\r\n    </StyledTodos>\r\n  );\r\n};\r\n\r\nTodos.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst StyledTodos = styled(Box)`\r\n  border-bottom: 1px solid ${props => props.theme.colors.gray};\r\n  div {\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Todos;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Todos from './Todos';\r\nimport { ContextProvider } from '../../context/ContextProvider';\r\n\r\nconst ToDoList = () => {\r\n  const {\r\n    input,\r\n    setInput,\r\n    isError,\r\n    todos,\r\n    addTodo,\r\n    showActTodos,\r\n    setShowActTodos,\r\n  } = useContext(ContextProvider);\r\n\r\n  return (\r\n    <Box\r\n      width='57vw'\r\n      height='70vh'\r\n      display='flex'\r\n      justifyContent='space-around'\r\n      alignItems='flex-start'\r\n    >\r\n      <StyledTodoList\r\n        width='47vw'\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n      >\r\n        <form onSubmit={addTodo}>\r\n          <BorderColor width='45vw' display='flex'>\r\n            <InputBase\r\n              fullWidth\r\n              placeholder='ADD NEW MISSON...'\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n            />\r\n            <Box\r\n              width='90px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              fontSize='48px'\r\n              onClick={addTodo}\r\n            >\r\n              +\r\n            </Box>\r\n          </BorderColor>\r\n        </form>\r\n        <TextColor height='2rem'>\r\n          {isError && 'please enter more than 3 characters'}\r\n        </TextColor>\r\n        <Box\r\n          width='45vw'\r\n          display='flex'\r\n          flexDirection='column'\r\n          // border='1px solid red'\r\n        >\r\n          <Box\r\n            width='45vw'\r\n            height='35px'\r\n            bgcolor='black'\r\n            color='white'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box marginLeft='30px' fontSize='26px'>\r\n              To-Do\r\n            </Box>\r\n\r\n            <Box\r\n              onClick={() => setShowActTodos(!showActTodos)}\r\n              marginRight='30px'\r\n            >\r\n              {showActTodos && todos.length > 0 ? <ArrowDown /> : <ArrowUp />}\r\n            </Box>\r\n          </Box>\r\n\r\n          {showActTodos &&\r\n            todos.map(todo => (\r\n              <Todos\r\n                key={todo.id}\r\n                id={todo.id}\r\n                title={todo.title}\r\n                completed={todo.completed}\r\n              />\r\n            ))}\r\n        </Box>\r\n      </StyledTodoList>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledTodoList = styled(Box)`\r\n  form {\r\n    color: ${props => props.theme.colors.orange};\r\n\r\n    input {\r\n      padding-left: 20px;\r\n      font-size: 30px;\r\n      height: 60px;\r\n      ::placeholder {\r\n        color: ${props => props.theme.colors.orange};\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    div:nth-child(2) {\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextColor = styled(Box)`\r\n  color: ${props => props.theme.colors.orange};\r\n`;\r\n\r\nconst BorderColor = styled(Box)`\r\n  border: 1px solid ${props => props.theme.colors.gray};\r\n`;\r\n\r\nconst ArrowDown = styled(Box)`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 15px solid transparent;\r\n  border-right: 15px solid transparent;\r\n  border-top: 15px solid ${props => props.theme.colors.white};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ArrowUp = styled(Box)`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 15px solid transparent;\r\n  border-right: 15px solid transparent;\r\n  border-bottom: 15px solid ${props => props.theme.colors.white};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default ToDoList;\r\n"],"sourceRoot":""}