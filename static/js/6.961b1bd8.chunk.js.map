{"version":3,"sources":["components/ToDoList/Todos.jsx","components/ToDoList/ToDoList.jsx"],"names":["StyledTodos","styled","Box","_templateObject","props","theme","colors","gray","LineThrough","_templateObject2","Todos","_ref","id","title","completed","toggleCompleted","useContext","ContextProvider","react_default","a","createElement","width","height","fontSize","display","justifyContent","alignItems","paddingLeft","marginRight","onClick","className","paddingRight","StyledTodoList","ToDoList_templateObject","orange","TextColor","ToDoList_templateObject2","BorderColor","_templateObject3","ArrowDown","_templateObject4","white","ArrowUp","_templateObject5","ToDoList","_useContext","input","setInput","isError","todos","addTodo","showActTodos","setShowActTodos","showComTodos","setShowComTodos","console","log","flexDirection","onSubmit","InputBase","fullWidth","placeholder","value","onChange","e","target","bgcolor","color","marginLeft","filter","todo","length","map","ToDoList_Todos","key","marginTop"],"mappings":"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","file":"static/js/6.961b1bd8.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport { ContextProvider } from '../../context/ContextProvider';\r\n\r\nconst Todos = ({ id, title, completed }) => {\r\n  const { toggleCompleted } = useContext(ContextProvider);\r\n\r\n  return (\r\n    <StyledTodos\r\n      width='45vw'\r\n      height='60px'\r\n      fontSize='24px'\r\n      display='flex'\r\n      justifyContent='space-between'\r\n      alignItems='center'\r\n    >\r\n      <Box paddingLeft='20px'>\r\n        <Box marginRight='20px' onClick={() => toggleCompleted(id)}>\r\n          {completed ? (\r\n            <i className='far fa-check-circle' />\r\n          ) : (\r\n            <i className='far fa-circle' />\r\n          )}\r\n        </Box>\r\n        {completed ? <LineThrough>{title}</LineThrough> : <Box>{title}</Box>}\r\n      </Box>\r\n      <Box paddingRight='30px' fontSize='28px'>\r\n        <i className='far fa-play-circle' />\r\n      </Box>\r\n    </StyledTodos>\r\n  );\r\n};\r\n\r\nTodos.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst StyledTodos = styled(Box)`\r\n  border-bottom: 1px solid ${props => props.theme.colors.gray};\r\n  div {\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LineThrough = styled(Box)`\r\n  text-decoration: line-through;\r\n`;\r\n\r\nexport default Todos;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Todos from './Todos';\r\nimport { ContextProvider } from '../../context/ContextProvider';\r\n\r\nconst ToDoList = () => {\r\n  const {\r\n    input,\r\n    setInput,\r\n    isError,\r\n    todos,\r\n    addTodo,\r\n    showActTodos,\r\n    setShowActTodos,\r\n    showComTodos,\r\n    setShowComTodos,\r\n  } = useContext(ContextProvider);\r\n\r\n  console.log(todos);\r\n\r\n  return (\r\n    <Box\r\n      width='57vw'\r\n      height='70vh'\r\n      display='flex'\r\n      justifyContent='space-around'\r\n      alignItems='flex-start'\r\n    >\r\n      <StyledTodoList\r\n        width='47vw'\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n      >\r\n        <form onSubmit={addTodo}>\r\n          <BorderColor width='45vw' display='flex'>\r\n            <InputBase\r\n              fullWidth\r\n              placeholder='ADD NEW MISSON...'\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n            />\r\n            <Box\r\n              width='90px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              fontSize='48px'\r\n              onClick={addTodo}\r\n            >\r\n              +\r\n            </Box>\r\n          </BorderColor>\r\n        </form>\r\n        <TextColor height='2rem'>\r\n          {isError && 'please enter more than 3 characters'}\r\n        </TextColor>\r\n        <Box\r\n          width='45vw'\r\n          display='flex'\r\n          flexDirection='column'\r\n          // border='1px solid red'\r\n        >\r\n          <Box\r\n            width='45vw'\r\n            height='35px'\r\n            bgcolor='black'\r\n            color='white'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box marginLeft='30px' fontSize='28px'>\r\n              To-Do\r\n            </Box>\r\n\r\n            <Box\r\n              onClick={() => setShowActTodos(!showActTodos)}\r\n              marginRight='30px'\r\n            >\r\n              {showActTodos &&\r\n              todos.filter(todo => todo.completed === false).length > 0 ? (\r\n                <ArrowDown />\r\n              ) : (\r\n                <ArrowUp />\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {showActTodos &&\r\n            todos\r\n              .filter(todo => todo.completed === false)\r\n              .map(todo => (\r\n                <Todos\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  title={todo.title}\r\n                  completed={todo.completed}\r\n                />\r\n              ))}\r\n\r\n          <Box\r\n            marginTop='30px'\r\n            width='45vw'\r\n            height='35px'\r\n            bgcolor='black'\r\n            color='white'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box marginLeft='30px' fontSize='26px'>\r\n              DONE\r\n            </Box>\r\n            <Box\r\n              onClick={() => setShowComTodos(!showComTodos)}\r\n              marginRight='30px'\r\n            >\r\n              {showComTodos &&\r\n              todos.filter(todo => todo.completed === true).length > 0 ? (\r\n                <ArrowDown />\r\n              ) : (\r\n                <ArrowUp />\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {showComTodos &&\r\n            todos\r\n              .filter(todo => todo.completed === true)\r\n              .map(todo => (\r\n                <Todos\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  title={todo.title}\r\n                  completed={todo.completed}\r\n                />\r\n              ))}\r\n        </Box>\r\n      </StyledTodoList>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledTodoList = styled(Box)`\r\n  form {\r\n    color: ${props => props.theme.colors.orange};\r\n\r\n    input {\r\n      padding-left: 20px;\r\n      font-size: 30px;\r\n      height: 60px;\r\n      ::placeholder {\r\n        color: ${props => props.theme.colors.orange};\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    div:nth-child(2) {\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextColor = styled(Box)`\r\n  color: ${props => props.theme.colors.orange};\r\n`;\r\n\r\nconst BorderColor = styled(Box)`\r\n  border: 1px solid ${props => props.theme.colors.gray};\r\n`;\r\n\r\nconst ArrowDown = styled(Box)`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 15px solid transparent;\r\n  border-right: 15px solid transparent;\r\n  border-top: 15px solid ${props => props.theme.colors.white};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ArrowUp = styled(Box)`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 15px solid transparent;\r\n  border-right: 15px solid transparent;\r\n  border-bottom: 15px solid ${props => props.theme.colors.white};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default ToDoList;\r\n"],"sourceRoot":""}