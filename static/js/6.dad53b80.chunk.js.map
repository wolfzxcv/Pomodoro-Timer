{"version":3,"sources":["components/ToDoList/Todos.jsx","components/ToDoList/ToDoList.jsx"],"names":["Todos","_ref","id","title","completed","react_default","a","createElement","Box","display","border","StyledTodoList","styled","_templateObject","ToDoList","_useContext","useContext","ContextProvider","input","setInput","isError","todos","addTodo","console","log","width","height","justifyContent","alignItems","flexDirection","onSubmit","InputBase","fullWidth","placeholder","value","onChange","e","target","fontSize","color","map","todo","ToDoList_Todos","key"],"mappings":"oJAoBeA,EAhBD,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,UAC1B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,QAAQ,QACXJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,OAAO,iBAAiBR,GAC7BG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,OAAO,iBAAiBP,GAC7BE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,OAAO,iBAAiBN,waCFnC,IAgEMO,EAAiBC,YAAOJ,IAAPI,CAAHC,KAuBLC,UAvFE,WAAM,IAAAC,EACgCC,qBACnDC,KADMC,EADaH,EACbG,MAAOC,EADMJ,EACNI,SAAUC,EADJL,EACIK,QAASC,EADbN,EACaM,MAAOC,EADpBP,EACoBO,QAMzC,OAHAC,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,QAASH,GAGnBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,MAAM,OACNC,OAAO,OACPjB,QAAQ,OACRkB,eAAe,eACfC,WAAW,aACXlB,OAAO,iBAEPL,EAAAC,EAAAC,cAACI,EAAD,CACEc,MAAM,OACNhB,QAAQ,OACRoB,cAAc,SACdF,eAAe,UAEftB,EAAAC,EAAAC,cAAA,QAAMuB,SAAUR,GACdjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,MAAM,OACNhB,QAAQ,OAERC,OAAO,qBAEPL,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,WAAS,EACTC,YAAY,oBACZC,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOH,UAEnC7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,MAAM,OACNhB,QAAQ,OACRkB,eAAe,SACfC,WAAW,SACXU,SAAS,QALX,OAWJjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkB,OAAO,OAAOa,MAAM,WACtBnB,GAAW,uCAEdf,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGa,EAAMmB,IAAI,SAAAC,GAAI,OACbpC,EAAAC,EAAAC,cAACmC,EAAD,CACEC,IAAKF,EAAKvC,GACVA,GAAIuC,EAAKvC,GACTC,MAAOsC,EAAKtC,MACZC,UAAWqC,EAAKrC","file":"static/js/6.dad53b80.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Todos = ({ id, title, completed }) => {\r\n  return (\r\n    <Box display='flex'>\r\n      <Box border='1px solid red'>{id}</Box>\r\n      <Box border='1px solid red'>{title}</Box>\r\n      <Box border='1px solid red'>{completed}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nTodos.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Todos from './Todos';\r\nimport { ContextProvider } from '../../context/ContextProvider';\r\n\r\nconst ToDoList = () => {\r\n  const { input, setInput, isError, todos, addTodo } = useContext(\r\n    ContextProvider\r\n  );\r\n  console.log('input', input);\r\n  console.log('todos', todos);\r\n\r\n  return (\r\n    <Box\r\n      width='57vw'\r\n      height='70vh'\r\n      display='flex'\r\n      justifyContent='space-around'\r\n      alignItems='flex-start'\r\n      border='1px solid red'\r\n    >\r\n      <StyledTodoList\r\n        width='47vw'\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n      >\r\n        <form onSubmit={addTodo}>\r\n          <Box\r\n            width='45vw'\r\n            display='flex'\r\n            // eslint-disable-next-line\r\n            border='1px solid #6A6868'\r\n          >\r\n            <InputBase\r\n              fullWidth\r\n              placeholder='ADD NEW MISSON...'\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n            />\r\n            <Box\r\n              width='90px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              fontSize='48px'\r\n            >\r\n              +\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Box height='2rem' color='#f44336'>\r\n          {isError && 'please enter more than 3 characters'}\r\n        </Box>\r\n        <Box>\r\n          {todos.map(todo => (\r\n            <Todos\r\n              key={todo.id}\r\n              id={todo.id}\r\n              title={todo.title}\r\n              completed={todo.completed}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </StyledTodoList>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledTodoList = styled(Box)`\r\n  form {\r\n    color: #f44336;\r\n\r\n    input {\r\n      padding-left: 20px;\r\n      font-size: 30px;\r\n      height: 60px;\r\n      ::placeholder {\r\n        color: #f44336;\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    div:nth-child(2) {\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToDoList;\r\n"],"sourceRoot":""}